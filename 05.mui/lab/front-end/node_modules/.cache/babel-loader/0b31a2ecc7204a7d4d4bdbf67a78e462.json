{"ast":null,"code":"var _jsxFileName = \"/home/chamson/Bureau/yanis_nicolas_webtech/05.mui/lab/front-end/src/Channel.js\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { useRef, useState } from 'react';\nimport axios from 'axios'; // Layout\n\nimport { useTheme } from '@mui/styles';\nimport { Fab } from '@mui/material';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown'; // Local\n\nimport Form from './channel/Form';\nimport List from './channel/List';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  root: {\n    height: '100%',\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n    overflowX: 'auto'\n  },\n  fab: {\n    position: 'absolute !important',\n    top: theme.spacing(2),\n    right: theme.spacing(2)\n  },\n  fabDisabled: {\n    display: 'none !important'\n  }\n});\n\nexport default function Channel({\n  channel\n}) {\n  _s();\n\n  const styles = useStyles(useTheme());\n  const listRef = useRef();\n  const channelId = useRef();\n  const [messages, setMessages] = useState([]);\n  const [scrollDown, setScrollDown] = useState(false);\n\n  const addMessage = message => {\n    fetchMessages();\n  };\n\n  const fetchMessages = async () => {\n    setMessages([]);\n    const {\n      data: messages\n    } = await axios.get(`http://localhost:3001/channels/${channel.id}/messages`);\n    setMessages(messages);\n\n    if (listRef.current) {\n      listRef.current.scroll();\n    }\n  };\n\n  if (channelId.current !== channel.id) {\n    fetchMessages();\n    channelId.current = channel.id;\n  }\n\n  const onScrollDown = scrollDown => {\n    setScrollDown(scrollDown);\n  };\n\n  const onClickScroll = () => {\n    listRef.current.scroll();\n  };\n\n  return _jsxDEV(\"div\", {\n    css: styles.root,\n    children: [_jsxDEV(List, {\n      channel: channel,\n      messages: messages,\n      onScrollDown: onScrollDown,\n      ref: listRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), _jsxDEV(Form, {\n      addMessage: addMessage,\n      channel: channel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), _jsxDEV(Fab, {\n      color: \"primary\",\n      \"aria-label\": \"Latest messages\",\n      css: [styles.fab, scrollDown || styles.fabDisabled],\n      onClick: onClickScroll,\n      children: _jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Channel, \"C1SM2qRPxfRzyHjqWDhWxnc6jOI=\", false, function () {\n  return [useStyles, useTheme];\n});\n\n_c = Channel;\n\nvar _c;\n\n$RefreshReg$(_c, \"Channel\");","map":{"version":3,"sources":["/home/chamson/Bureau/yanis_nicolas_webtech/05.mui/lab/front-end/src/Channel.js"],"names":["useRef","useState","axios","useTheme","Fab","ArrowDropDownIcon","Form","List","useStyles","theme","root","height","flex","display","flexDirection","position","overflowX","fab","top","spacing","right","fabDisabled","Channel","channel","styles","listRef","channelId","messages","setMessages","scrollDown","setScrollDown","addMessage","message","fetchMessages","data","get","id","current","scroll","onScrollDown","onClickScroll"],"mappings":"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","sourcesContent":["\n/** @jsxImportSource @emotion/react */\nimport {useRef, useState} from 'react';\nimport axios from 'axios';\n// Layout\nimport { useTheme } from '@mui/styles';\nimport { Fab } from '@mui/material';\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\n// Local\nimport Form from './channel/Form'\nimport List from './channel/List'\n\nconst useStyles = (theme) => ({\n  root: {\n    height: '100%',\n    flex: '1 1 auto',\n    display: 'flex',\n    flexDirection: 'column',\n    position: 'relative',\n    overflowX: 'auto',\n  },\n  fab: {\n    position: 'absolute !important',\n    top: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  fabDisabled: {\n    display: 'none !important',\n  }\n})\n\nexport default function Channel({\n  channel\n}) {\n  const styles = useStyles(useTheme())\n  const listRef = useRef();\n  const channelId = useRef()\n  const [messages, setMessages] = useState([])\n  const [scrollDown, setScrollDown] = useState(false)\n  const addMessage = (message) => {\n    fetchMessages()\n  }\n  const fetchMessages = async () => {\n    setMessages([])\n    const {data: messages} = await axios.get(`http://localhost:3001/channels/${channel.id}/messages`)\n    setMessages(messages)\n    if(listRef.current){\n      listRef.current.scroll()\n    }\n  }\n  \n  if(channelId.current !== channel.id){\n    fetchMessages()\n    channelId.current = channel.id\n  }\n  const onScrollDown = (scrollDown) => {\n    setScrollDown(scrollDown)\n  }\n  const onClickScroll = () => {\n    listRef.current.scroll()\n  }\n  return (\n    <div css={styles.root}>\n      <List\n        channel={channel}\n        messages={messages}\n        onScrollDown={onScrollDown}\n        ref={listRef}\n      />\n      <Form addMessage={addMessage} channel={channel} />\n      <Fab\n        color=\"primary\"\n        aria-label=\"Latest messages\"\n        css={[styles.fab, scrollDown || styles.fabDisabled]}\n        onClick={onClickScroll}\n      >\n        <ArrowDropDownIcon />\n      </Fab>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}