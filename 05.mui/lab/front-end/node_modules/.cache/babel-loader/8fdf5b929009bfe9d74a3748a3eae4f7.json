{"ast":null,"code":"import { characterEntitiesLegacy } from 'character-entities-legacy';\nimport { characters } from '../constant/characters.js';\nimport { dangerous } from '../constant/dangerous.js';\nvar own = {}.hasOwnProperty;\n/**\n * Transform `code` into a named character reference.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean} omit\n * @param {boolean} attribute\n * @returns {string}\n */\n\nexport function toNamed(code, next, omit, attribute) {\n  var character = String.fromCharCode(code);\n  /** @type {string} */\n\n  var name;\n  /** @type {string} */\n\n  var value;\n\n  if (own.call(characters, character)) {\n    name = characters[character];\n    value = '&' + name;\n\n    if (omit && own.call(characterEntitiesLegacy, name) && !dangerous.includes(name) && (!attribute || next && next !== 61\n    /* `=` */\n    && /[^\\da-z]/i.test(String.fromCharCode(next)))) {\n      return value;\n    }\n\n    return value + ';';\n  }\n\n  return '';\n}","map":{"version":3,"sources":["/home/chamson/Bureau/yanis_nicolas_webtech/05.mui/lab/front-end/node_modules/stringify-entities/lib/util/to-named.js"],"names":["characterEntitiesLegacy","characters","dangerous","own","hasOwnProperty","toNamed","code","next","omit","attribute","character","String","fromCharCode","name","value","call","includes","test"],"mappings":"AAAA,SAAQA,uBAAR,QAAsC,2BAAtC;AACA,SAAQC,UAAR,QAAyB,2BAAzB;AACA,SAAQC,SAAR,QAAwB,0BAAxB;AAEA,IAAIC,GAAG,GAAG,GAAGC,cAAb;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,IAAvB,EAA6BC,IAA7B,EAAmCC,SAAnC,EAA8C;AACnD,MAAIC,SAAS,GAAGC,MAAM,CAACC,YAAP,CAAoBN,IAApB,CAAhB;AACA;;AACA,MAAIO,IAAJ;AACA;;AACA,MAAIC,KAAJ;;AAEA,MAAIX,GAAG,CAACY,IAAJ,CAASd,UAAT,EAAqBS,SAArB,CAAJ,EAAqC;AACnCG,IAAAA,IAAI,GAAGZ,UAAU,CAACS,SAAD,CAAjB;AACAI,IAAAA,KAAK,GAAG,MAAMD,IAAd;;AAEA,QACEL,IAAI,IACJL,GAAG,CAACY,IAAJ,CAASf,uBAAT,EAAkCa,IAAlC,CADA,IAEA,CAACX,SAAS,CAACc,QAAV,CAAmBH,IAAnB,CAFD,KAGC,CAACJ,SAAD,IACEF,IAAI,IACHA,IAAI,KAAK;AAAG;AADb,OAEC,YAAYU,IAAZ,CAAiBN,MAAM,CAACC,YAAP,CAAoBL,IAApB,CAAjB,CANJ,CADF,EAQE;AACA,aAAOO,KAAP;AACD;;AAED,WAAOA,KAAK,GAAG,GAAf;AACD;;AAED,SAAO,EAAP;AACD","sourcesContent":["import {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characters} from '../constant/characters.js'\nimport {dangerous} from '../constant/dangerous.js'\n\nvar own = {}.hasOwnProperty\n\n/**\n * Transform `code` into a named character reference.\n *\n * @param {number} code\n * @param {number} next\n * @param {boolean} omit\n * @param {boolean} attribute\n * @returns {string}\n */\nexport function toNamed(code, next, omit, attribute) {\n  var character = String.fromCharCode(code)\n  /** @type {string} */\n  var name\n  /** @type {string} */\n  var value\n\n  if (own.call(characters, character)) {\n    name = characters[character]\n    value = '&' + name\n\n    if (\n      omit &&\n      own.call(characterEntitiesLegacy, name) &&\n      !dangerous.includes(name) &&\n      (!attribute ||\n        (next &&\n          next !== 61 /* `=` */ &&\n          /[^\\da-z]/i.test(String.fromCharCode(next))))\n    ) {\n      return value\n    }\n\n    return value + ';'\n  }\n\n  return ''\n}\n"]},"metadata":{},"sourceType":"module"}