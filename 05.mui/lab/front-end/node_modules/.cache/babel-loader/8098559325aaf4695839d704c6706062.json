{"ast":null,"code":"var _jsxFileName = \"/home/chamson/Bureau/yanis_nicolas_webtech/05.mui/lab/front-end/src/Channels.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { red } from \"@mui/material/colors\";\n/** @jsxImportSource @emotion/react */\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'; // Layout\n\nimport Avatar from '@mui/material/Avatar';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\nconst drawerWidth = 200;\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    flexShrink: 0,\n    width: drawerWidth\n  },\n  drawerPaper: {\n    width: drawerWidth\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  },\n  toolbar: { ...theme.mixins.toolbar,\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3)\n  }\n}));\nexport default function App() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMdUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n  const [open, setOpen] = React.useState(false);\n\n  const toggleDrawer = event => {\n    if (event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setOpen(!open);\n  };\n\n  const [channels, setChannels] = useState([]);\n  useEffect(() => {\n    const fetch = async () => {\n      const {\n        data: channels\n      } = await axios.get('http://localhost:3001/channels');\n      setChannels(channels);\n    };\n\n    fetch();\n  }, []);\n  return _jsxDEV(\"div\", {\n    children: [_jsxDEV(AppBar, {\n      position: \"fixed\",\n      className: classes.appBar,\n      children: _jsxDEV(IconButton, {\n        color: \"inherit\",\n        \"aria-label\": \"open drawer\",\n        edge: \"start\",\n        onClick: toggleDrawer,\n        className: classes.menuButton,\n        children: _jsxDEV(MenuIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), _jsxDEV(Drawer, {\n      className: classes.drawer,\n      variant: isMdUp ? \"permanent\" : \"temporary\",\n      classes: {\n        paper: classes.drawerPaper\n      },\n      anchor: \"left\",\n      open: open,\n      onClose: toggleDrawer,\n      children: [_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), _jsxDEV(List, {\n        style: {\n          backgroundColor: '#12824C',\n          color: '#FFFFFF'\n        },\n        children: [\"Channel 1\", \"Channel 2\", \"Channel 3\", \"Channel 4\"].map((text, index) => _jsxDEV(ListItem, {\n          button: true,\n          backgroundColor: \"grey\",\n          children: [_jsxDEV(ListItemIcon, {\n            children: _jsxDEV(Avatar, {\n              children: \"H\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this), _jsxDEV(ListItemText, {\n            primary: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, text, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), _jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oUQKd4IwODMLKFftwePpc/RR7yE=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/chamson/Bureau/yanis_nicolas_webtech/05.mui/lab/front-end/src/Channels.js"],"names":["React","makeStyles","useTheme","useMediaQuery","Drawer","CssBaseline","AppBar","Toolbar","IconButton","List","Typography","Divider","ListItem","ListItemIcon","ListItemText","InboxIcon","MailIcon","MenuIcon","red","useState","useEffect","axios","Avatar","drawerWidth","useStyles","theme","root","display","appBar","zIndex","drawer","flexShrink","width","drawerPaper","menuButton","marginRight","spacing","breakpoints","up","toolbar","mixins","down","content","flexGrow","backgroundColor","palette","background","default","padding","App","classes","isMdUp","open","setOpen","toggleDrawer","event","type","key","channels","setChannels","fetch","data","get","paper","color","map","text","index"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { red } from \"@mui/material/colors\";\n/** @jsxImportSource @emotion/react */\nimport {useState, useEffect} from 'react';\nimport axios from 'axios';\n// Layout\nimport Avatar from '@mui/material/Avatar';\nconst drawerWidth = 200;\n\n\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  },\n  drawer: {\n    flexShrink: 0,\n    width: drawerWidth,\n  },\n\n\n  drawerPaper: {\n    width: drawerWidth,\n\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\"\n    }\n  },\n  toolbar: {\n    ...theme.mixins.toolbar,\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  content: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.default,\n    padding: theme.spacing(3)\n    \n  }\n}));\n\nexport default function App() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const isMdUp = useMediaQuery(theme.breakpoints.up(\"md\"));\n\n  const [open, setOpen] = React.useState(false);\n\n  const toggleDrawer = event => {\n    if (\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setOpen(!open);\n  };\n\n  const [channels, setChannels] = useState([])\n  useEffect( () => {\n    const fetch = async () => {\n      const {data: channels} = await axios.get('http://localhost:3001/channels')\n      setChannels(channels)\n    }\n    fetch()\n  }, []);\n\n  return (\n    <div >\n      <AppBar position=\"fixed\" className={classes.appBar} >\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            edge=\"start\"\n            onClick={toggleDrawer}\n            className={classes.menuButton}\n          >\n            <MenuIcon />\n          </IconButton>\n         \n      </AppBar>\n      <Drawer \n        className={classes.drawer}\n        variant={isMdUp ? \"permanent\" : \"temporary\"}\n        classes={{\n          paper: classes.drawerPaper\n        }}\n        anchor=\"left\"\n        open={open}\n        onClose={toggleDrawer}\n      >\n        <Divider />\n        <List   style={{backgroundColor: '#12824C', color: '#FFFFFF'}}>\n          {[\"Channel 1\", \"Channel 2\", \"Channel 3\", \"Channel 4\"].map((text, index) => (\n            <ListItem button key={text} backgroundColor=\"grey\">\n              <ListItemIcon>\n                <Avatar>H</Avatar>\n              </ListItemIcon>\n              <ListItemText primary={text} />\n            </ListItem>\n          ))}\n        </List>\n        <Divider />\n        \n      </Drawer>\n      \n        \n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}